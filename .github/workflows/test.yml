name: Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.MD'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'
      - '**.MD'

  workflow_dispatch:

jobs:
  test:
    runs-on: [self-hosted, windows, x64, philips, servercore-20H2]
    name: Test
    env:
      TEST1: Test1
      TEST2: Test2
      TEST3: ${{ secrets.TEST_SECRET }}
    strategy:
      matrix:
        docker_container: ["mcr.microsoft.com/windows/servercore:20H2"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Test_Run_Default
        uses: ./
        with:
          image: ${{ matrix.docker_container }}
          entrypoint: powershell.exe
          env_names: GITHUB_WORKSPACE
          run: >-
            ${{ github.workspace }}\test\run_test.ps1 -testPath "${{ github.workspace }}\test\run_default.Tests.ps1";

      - name: Test_ExtraArgs
        uses: ./
        with:
          image: ${{ matrix.docker_container }}
          workspace_path: ${{ github.workspace }}
          extra_args: --entrypoint cmd.exe
          run: >-
            echo "Hello world";
            exit %ERRORLEVEL%;
      - name: Test_Environment
        uses: ./
        with:
          image: ${{ matrix.docker_container }}
          entrypoint: powershell.exe
          env_names: TEST1, TEST2, TEST3
          run: >-
            ${{ github.workspace }}\test\run_test.ps1 -testPath "${{ github.workspace }}\test\environment.Tests.ps1";

      - name: Test_WorkPath
        uses: ./
        with:
          image: ${{ matrix.docker_container }}
          work_path: 'c:\temp'
          entrypoint: powershell.exe
          memory: 3GB
          run: >-
            ${{ github.workspace }}\test\run_test.ps1 -testPath "${{ github.workspace }}\test\work_path.Tests.ps1";

      - name: Test_MappingPath
        uses: ./
        with:
          image: ${{ matrix.docker_container }}
          mapping_path: 'c:\mapping'
          work_path: 'c:\temp'
          entrypoint: powershell.exe
          memory: 3GB
          run: >-
            c:\mapping\test\run_test.ps1 -testPath "c:\mapping\test\mapping_path.Tests.ps1";

      - name: Test_WorkSpacePath
        uses: ./
        with:
          image: ${{ matrix.docker_container }}
          workspace_path: ${{ github.workspace }}/test
          entrypoint: powershell.exe
          memory: 3GB
          env_names: GITHUB_WORKSPACE
          run: >-
            ${{ github.workspace }}\test\run_test.ps1 -testPath "${{ github.workspace }}\test\workspace_path.Tests.ps1";

  validate:
    runs-on: [self-hosted, linux, X64, philips]
    name: Validate
    container: mcr.microsoft.com/powershell:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install
        shell: pwsh
        run: >-
             Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted;
             Install-Module -Name Pester -Force -SkipPublisherCheck;
             Update-Module -Name Pester -Force;
             Install-Module -Name PSScriptAnalyzer -Force;
      - name: Linter src
        shell: pwsh
        run: >-
             Invoke-ScriptAnalyzer -Path src -EnableExit;
      - name: Linter test
        shell: pwsh
        run: >-
             Invoke-ScriptAnalyzer -Path test -EnableExit;
      - name: Test-Action-Scripts
        shell: pwsh
        run: >-
             cd src;
             $config=New-PesterConfiguration;
             $config.Run.Exit=$true;
             Invoke-Pester -Configuration $config;
